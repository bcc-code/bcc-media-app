def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
// START: FlutterFire Configuration
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.firebase-perf'
// END: FlutterFire Configuration
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion 33
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "tv.brunstad.app"
        minSdkVersion 21
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }

    flavorDimensions "env"
    productFlavors {
        prod {
            dimension "env"
            applicationIdSuffix ""
            manifestPlaceholders += [
                appName: "BCC Media",
                appAuthRedirectScheme: 'tv.brunstad.app'
            ]
            flutter.target "lib/main_prod.dart"
        }
        dev {
            dimension "env"
            applicationIdSuffix ".dev"
            flutter.target "lib/main_dev.dart"
            manifestPlaceholders += [
                appName: "DEV BCC Media",
                appAuthRedirectScheme: 'tv.brunstad.app.dev'
            ]
        }
        v4_prod {
            dimension "env"
            applicationIdSuffix ".v4"
            flutter.target "lib/main_v4_prod.dart"
            manifestPlaceholders += [
                appName: "BCC Media v4",
                appAuthRedirectScheme: 'tv.brunstad.app.v4'
            ]
        }
        v4_dev {
            dimension "env"
            applicationIdSuffix ".v4.dev"
            flutter.target "lib/main_v4_dev.dart"
            manifestPlaceholders += [
                appName: "DEV BCC Media v4",
                appAuthRedirectScheme: 'tv.brunstad.app.v4.dev'
            ]
        }
    }
}

flutter {
    source '../..'
}

repositories {
    maven { url  "https://npaw.jfrog.io/artifactory/youbora/" }
}

dependencies {
    def youboraVersion = "6.8.0"
    implementation "com.nicepeopleatwork:youboralib:$youboraVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    /*implementation 'com.google.android.exoplayer:exoplayer:2.18.1'*/
    def media3_version = "1.0.0-beta02"
    implementation "androidx.media3:media3-exoplayer:$media3_version"
    implementation "androidx.media3:media3-exoplayer-hls:$media3_version"
    implementation "androidx.media3:media3-cast:$media3_version"
    implementation "androidx.media3:media3-test-utils:$media3_version"
    implementation "androidx.media3:media3-session:$media3_version"
    implementation "androidx.media3:media3-ui:$media3_version"
    testImplementation "junit:junit:4.13.2"
}

apply plugin: 'com.google.firebase.crashlytics'