type StudyTopic {
    id: ID!
    title: String!
    description: String!
    image(style: ImageStyle): String @goField(forceResolver: true)
    images: [Image!]!

    """
    The default lesson.
    Should not be used actively in lists, as it could affect query speeds.
    """
    defaultLesson: Lesson! @goField(forceResolver: true)
    lessons(first: Int, offset: Int): LessonPagination! @goField(forceResolver: true)

    progress: LessonsProgress! @goField(forceResolver: true)
}

type Lesson {
    id: ID!
    title: String!
    description: String!
    image(style: ImageStyle): String @goField(forceResolver: true)
    tasks(first: Int, offset: Int): TaskPagination! @goField(forceResolver: true)
    topic: StudyTopic! @goField(forceResolver: true)

    """
    The default episode.
    Should not be used actively in lists, as it could affect query speeds.
    """
    defaultEpisode: Episode @goField(forceResolver: true)
    episodes(first: Int, offset: Int): EpisodePagination! @goField(forceResolver: true)
    links(first: Int, offset: Int): LinkPagination! @goField(forceResolver: true)

    progress: TasksProgress! @goField(forceResolver: true)

    completed: Boolean! @goField(forceResolver: true)
    locked: Boolean! @goField(forceResolver: true)

    previous: Lesson @goField(forceResolver: true)
    next: Lesson @goField(forceResolver: true)
}

type LessonPagination implements Pagination {
    offset: Int!
    first: Int!
    total: Int!
    items: [Lesson!]!
}

interface Task {
    id: ID!
    title: String!

    completed: Boolean!
}

type LessonsProgress {
    total: Int!
    completed: Int!
}

type TasksProgress {
    total: Int!
    completed: Int!
}

type TaskPagination implements Pagination {
    offset: Int!
    first: Int!
    total: Int!
    items: [Task!]!
}

type AlternativesTask implements Task {
    id: ID!
    title: String!
    completed: Boolean! @goField(forceResolver: true)
    alternatives: [Alternative!]! @goField(forceResolver: true)
    competitionMode: Boolean!
    locked: Boolean! @goField(forceResolver: true)
}

type Alternative {
    id: ID!
    title: String!
    isCorrect: Boolean
    selected: Boolean!
}

type TextTask implements Task {
    id: ID!
    title: String!
    completed: Boolean! @goField(forceResolver: true)
}

type PosterTask implements Task {
    id: ID!
    title: String!
    completed: Boolean! @goField(forceResolver: true)
    image: String!
}

type QuoteTask implements Task {
    id: ID!
    title: String!
    completed: Boolean! @goField(forceResolver: true)
    image: String!
}

type VideoTask implements Task {
    id: ID!
    title: String!
    completed: Boolean! @goField(forceResolver: true)
    episode: Episode! @goField(forceResolver: true)
    secondaryTitle: String
    description: String
}

type LinkTask implements Task {
    id: ID!
    title: String!
    completed: Boolean! @goField(forceResolver: true)
    link: Link! @goField(forceResolver: true)
    secondaryTitle: String
    description: String
}
