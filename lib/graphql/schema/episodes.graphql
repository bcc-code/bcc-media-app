enum EpisodeType {
    episode
    standalone
}

union EpisodeContextUnion = Season | ContextCollection

enum ShareRestriction {
    registered
    members
    public
}

type Episode {
    id: ID!
    uuid: String!
    status: Status!
    type: EpisodeType!
    legacyID: ID
    legacyProgramID: ID
    locked: Boolean! @goField(forceResolver: true)
    publishDate: Date!
    productionDate: Date!
    productionDateInTitle: Boolean!
    availableFrom: Date! @goField(forceResolver: true)
    availableTo: Date!
    ageRating: String!
    title: String!
    description: String!
    extraDescription: String!
    image(style: ImageStyle): String @goField(forceResolver: true)
    imageUrl: String @deprecated(reason: "Replaced by the image field")
    streams: [Stream!]! @goField(forceResolver: true)
    files: [File!]! @goField(forceResolver: true)
    chapters: [Chapter!]!
    season: Season @goField(forceResolver: true)
    duration: Int!
    progress: Int @goField(forceResolver: true)
    watched: Boolean! @goField(forceResolver: true)
    audioLanguages: [Language!]!
    subtitleLanguages: [Language!]!
    context: EpisodeContextUnion @goField(forceResolver: true)
    relatedItems(first: Int, offset: Int): SectionItemPagination @goField(forceResolver: true)
    images: [Image!]!
    number: Int
    lessons(first: Int, offset: Int): LessonPagination! @goField(forceResolver: true)
    shareRestriction: ShareRestriction! @goField(forceResolver: true)
    inMyList: Boolean! @goField(forceResolver: true)

    next: [Episode!]! @goField(forceResolver: true)
}

type EpisodePagination implements Pagination {
    total: Int!
    first: Int!
    offset: Int!
    items: [Episode!]!
}

type Chapter {
    id: ID!
    start: Int!
    title: String!
}

type File {
    id: ID!
    url: String!
    audioLanguage: Language!
    subtitleLanguage: Language
    size: Int
    fileName: String!
    mimeType: String!
}

enum StreamType {
    hls_ts
    hls_cmaf
    dash
}

type Stream {
    id: ID!
    url: String!
    audioLanguages: [Language!]!
    subtitleLanguages: [Language!]!
    type: StreamType!
}
