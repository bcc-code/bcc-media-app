
type Page{
    id: ID!
    code: String!
    title: String!
    description: String
    image(style: ImageStyle): String @goField(forceResolver: true)
    images: [Image!]!
    sections(
        first: Int
        offset: Int
    ): SectionPagination! @goField(forceResolver: true)
}

type ItemSectionMetadata {
    continueWatching: Boolean!
    myList: Boolean!
    secondaryTitles: Boolean!
    collectionId: ID!
    useContext: Boolean!
    prependLiveElement: Boolean!
}

interface Section{
    id: ID!
    title: String
    description: String
}

type SectionPagination implements Pagination {
    total: Int!
    first: Int!
    offset: Int!
    items: [Section!]!
}

enum SectionSize {
    small
    medium
}

enum CardSectionSize {
    large
    mini
}

enum GridSectionSize {
    half
}

interface ItemSection implements Section {
    id: ID!
    metadata: ItemSectionMetadata
    title: String
    description: String
    items(first: Int, offset: Int): SectionItemPagination! @goField(forceResolver: true)
}

type PosterSection implements Section & ItemSection {
    id: ID!
    metadata: ItemSectionMetadata
    title: String
    description: String
    size: SectionSize!
    items(first: Int, offset: Int): SectionItemPagination! @goField(forceResolver: true)
}

type FeaturedSection implements Section & ItemSection {
    id: ID!
    metadata: ItemSectionMetadata
    title: String
    description: String
    size: SectionSize!
    items(first: Int, offset: Int): SectionItemPagination! @goField(forceResolver: true)
}

type DefaultSection implements Section & ItemSection {
    id: ID!
    metadata: ItemSectionMetadata
    title: String
    description: String
    size: SectionSize!
    items(first: Int, offset: Int): SectionItemPagination! @goField(forceResolver: true)
}

type CardSection implements Section & ItemSection {
    id: ID!
    metadata: ItemSectionMetadata
    title: String
    description: String
    size: CardSectionSize!
    items(first: Int, offset: Int): SectionItemPagination! @goField(forceResolver: true)
}

type ListSection implements Section & ItemSection {
    id: ID!
    metadata: ItemSectionMetadata
    title: String
    description: String
    size: SectionSize!
    items(first: Int, offset: Int): SectionItemPagination! @goField(forceResolver: true)
}

type CardListSection implements Section & ItemSection {
    id: ID!
    metadata: ItemSectionMetadata
    title: String
    description: String
    size: CardSectionSize!
    items(first: Int, offset: Int): SectionItemPagination! @goField(forceResolver: true)
}

interface GridSection implements Section & ItemSection {
    id: ID!
    metadata: ItemSectionMetadata
    title: String
    description: String
    size: GridSectionSize!
    items(first: Int, offset: Int): SectionItemPagination! @goField(forceResolver: true)
}

type DefaultGridSection implements Section & ItemSection & GridSection {
    id: ID!
    metadata: ItemSectionMetadata
    title: String
    description: String
    size: GridSectionSize!
    items(first: Int, offset: Int): SectionItemPagination! @goField(forceResolver: true)
}

type PosterGridSection implements Section & ItemSection & GridSection {
    id: ID!
    metadata: ItemSectionMetadata
    title: String
    description: String
    size: GridSectionSize!
    items(first: Int, offset: Int): SectionItemPagination! @goField(forceResolver: true)
}

type IconGridSection implements Section & ItemSection & GridSection {
    id: ID!
    metadata: ItemSectionMetadata
    title: String
    description: String
    size: GridSectionSize!
    items(first: Int, offset: Int): SectionItemPagination! @goField(forceResolver: true)
}

type IconSection implements Section & ItemSection {
    id: ID!
    metadata: ItemSectionMetadata
    title: String
    description: String
    items(first: Int, offset: Int): SectionItemPagination! @goField(forceResolver: true)
}

type LabelSection implements Section & ItemSection {
    id: ID!
    metadata: ItemSectionMetadata
    title: String
    description: String
    items(first: Int, offset: Int): SectionItemPagination! @goField(forceResolver: true)
}

type MessageSection implements Section {
    id: ID!
    metadata: ItemSectionMetadata
    title: String
    description: String
    messages: [Message!] @goField(forceResolver: true)
}

type WebSection implements Section {
    id: ID!
    metadata: ItemSectionMetadata
    title: String
    description: String
    url: String!
    widthRatio: Float!
    aspectRatio: Float
    height: Int
    authentication: Boolean!
}

type AchievementSection implements Section {
    id: ID!
    title: String
    description: String
}

type PageDetailsSection implements Section {
    id: ID!
    title: String
    description: String
}

type Collection {
    id: ID!
    slug: String
    items(
        first: Int,
        offset: Int,
    ): CollectionItemPagination @goField(forceResolver: true)
}

type ContextCollection {
    id: ID!
    slug: String
    items(
        first: Int,
        offset: Int,
    ): SectionItemPagination @goField(forceResolver: true)
}

enum LinkType {
    text
    audio
    video
    other
}

type Link {
    id: ID!
    url: String! @goField(forceResolver: true)
    title: String!
    description: String
    type: LinkType!
    image(style: ImageStyle): String @goField(forceResolver: true)
}

type LinkPagination implements Pagination {
    total: Int!
    first: Int!
    offset: Int!
    items: [Link!]!
}

union SectionItemType = Show | Season | Episode | Page | Link | StudyTopic

type SectionItem {
    id: ID!
    sort: Int!
    title: String!
    description: String!
    image: String @goField(forceResolver: true)
    item: SectionItemType!
}

type SectionItemPagination implements Pagination {
    first: Int!
    offset: Int!
    total: Int!
    items: [SectionItem!]!
}
