directive @goField(forceResolver: Boolean, name: String) on INPUT_FIELD_DEFINITION
    | FIELD_DEFINITION

schema{
  query: QueryRoot
  mutation: MutationRoot
}

interface Pagination {
  total: Int!
  first: Int!
  offset: Int!
}

scalar Language

scalar Cursor
scalar Date

scalar UUID

type Settings {
  audioLanguages: [Language!]!
  subtitleLanguages: [Language!]!
}

type Image {
  style: String!
  url: String!
}

enum ImageStyle {
  poster
  featured
  default
}

enum Status {
  published
  unlisted
}

enum Gender {
  male
  female
  unknown
}

type User {
  id: ID
  anonymous: Boolean!
  bccMember: Boolean!
  audience: String
  email: String
  emailVerified: Boolean! @goField(forceResolver: true)
  settings: Settings!
  roles: [String!]!
  analytics: Analytics!
  gender: Gender!
  firstName: String!
  displayName: String!
  completedRegistration: Boolean! @goField(forceResolver: true)
}

input LegacyIDLookupOptions {
  episodeID: Int
  programID: Int
}

type LegacyIDLookup {
  id: ID!
}

input EpisodeContext {
  collectionId: String
}

type RedirectLink {
  url: String!
}

type RedirectParam {
  key: String!
  value: String!
}

type QueryRoot{
  application: Application!
  languages: [Language!]!

  export(
    # Only export for this groups. The groups will be filtered by the groups the users has access to.
    # NOT IMPLEMENTED YET!
    groups: [String!]
  ): Export!

  redirect(id: String!): RedirectLink!

  page(
    id: ID
    code: String
  ): Page!

  section(
    id: ID!
    timestamp: String
  ): Section!

  show(
    id: ID!
  ): Show!

  season(
    id: ID!
  ): Season!

  episode(
    id: ID!
    context: EpisodeContext
  ): Episode!

  collection(
    id: ID
    slug: String
  ): Collection!

  search(
    queryString: String!
    first: Int
    offset: Int
    type: String
    minScore: Int
  ): SearchResult!

  pendingAchievements: [Achievement!]!

  achievement(id: ID!): Achievement!

  achievementGroup(id: ID!): AchievementGroup!
  achievementGroups(first: Int, offset: Int): AchievementGroupPagination!

  studyTopic(id: ID!): StudyTopic!
  studyLesson(id: ID!): Lesson!

  calendar: Calendar
  event(id: ID!): Event

  faq: FAQ!

  me: User!

  myList: UserCollection!

  userCollection(id: UUID!): UserCollection!

  config: Config!

  profiles: [Profile!]!
  profile: Profile!

  legacyIDLookup(options: LegacyIDLookupOptions): LegacyIDLookup!

  prompts(timestamp: Date): [Prompt!]!
}
